# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  create:
     branches: [ "release/**" ]        
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
   
     env:
        BUILD_CONFIG: 'Release'
        SOLUTION: 'ClientStaticAssets.sln'
        
    # The type of runner that the job will run on
     runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
     steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.1

      - name: Get Build Version
        run: |
            Import-Module .\build\GetBuildVersion.psm1
            Write-Host $Env:GITHUB_REF
            $version = GetBuildVersion -VersionString $Env:GITHUB_REF
            echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
        
     
      # Runs a single command using the runners shell
      - name: Setup Nuget
        uses: Nuget/Setup-nuget@v1.2.0
      
      - name: Restore Dependancies
        run: nuget restore $SOLUTION

      - name: Setup .Net
        uses: actions/setup-dotnet@v4.0.0
        with:
           dotnet-version: 8.x
           
      - name: Build
        run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
        
      - name: Publish
        if: startsWith(github.ref, 'refs/heads/release')
        run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
